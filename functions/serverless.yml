service: movies-telegram-bot

custom:
  tableName: 'infoTable'

provider:
  name: aws
  runtime: nodejs10.x
  region: eu-central-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["InfoTable", "Arn" ] }

functions:
  search:
    handler: index.search
    events:
      - http: 
          path: api/trackers/{provider}/search
          method: get
          cors: true
          request:
            parameters:
              path:
                provider: true
              querystrings:
                q: true

  provider:
    handler: index.provider
    events:
      - http: 
          path: api/trackers
          method: get
          cors: true

  info:
    handler: index.info
    events:
      - http: 
          path: api/trackers/{provider}/items/{resultId}
          method: get
          cors: true
          request:
            parameters:
              path:
                - provider: true 
                - resultId: true 
    environment:
      TABLE_NAME: ${self:custom.tableName}

  extract:
    handler: api/index.extract
    events:
      - http: 
          path: extract
          method: get
          cors: true

  bot:
    handler: index.bot
    events:
      - http: 
          path: bot
          method: any
          cors: true

resources:
  Resources:
    InfoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: TRUE